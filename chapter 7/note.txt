7.2 

在Express中路由如何工作
 app.get("/about",function(req,res){
res.send("Hello from the about route!");
});
注：此实例要在index.js中添加，然后重启服务器，输入网址
localhost:3000/about即可访问；

7.3

Post方式工作：
与get的过程是一样的，但要使用POST动词而不是GET动词。
app.post("/",function(){
res.send(req.body);
});
实例；
index.jade
form(method="post",action= "/")
   fieldset
    legend Add a user
     p.clearfix
     label First name
     input(name= "user[first_name]")
    p.clearfix
     label Last name
     input(name= "user[surname]")
    p.actions
     input(type= "submit", value= "Save")
index.js
router.post("/", function(req, res) {
	res.send(req.body);
});

7.5 

在路由中使用参数
实例：
在users.js中添加：
app.get("/users/:id", function(req,res){
	res.send("show content for user id:"+req.params.id);
});

7.7-7.8
视图的渲染实例：
index.js
router.get('/renderUse',function(req,res) {
	// you would probably get this data from a data store
	var user = {
		first_name: "Lord",
		surname: "Lucan",
		address: "I'm not telling",
		facebook_friends: "1356200"
	};
	// Note how the user object is passed as local variable to the view
	res.render("chapterCanShu.jade",{title:"User",user:user});	
});
chapterCanShu.jade 
extends layout


block content
  h1= title
  p Welcome to #{title}
  h1 Passing data through to the view layer
  h3 First name
  p= user.first_name
  h3 Surname
  p= user.surname
  h3 Address
  p= user.address
  h3 Facebook Friends
  p= user.facebook_friends
















